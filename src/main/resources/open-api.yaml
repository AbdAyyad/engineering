openapi: 3.0.2
info:
  title: Al hawamdeh engening project
  description: "Al hawamdeh engening project"
  termsOfService: http://swagger.io/terms/
  contact:
    email: abdayyad2012@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1-SNAPSHOT
servers:
  - url: http://localhost:8080/api
tags:
  - name: user
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: http://swagger.io
  - name: items
    description: operation about items

paths:
  /user:
    post:
      tags:
        - user
      summary: Create user
      description: Create user functionality
      operationId: createUser
      parameters:
        - name: admin_id
          in: header
          required: true
          schema:
            type: integer
      requestBody:
        description: Created user object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        200:
          description: "add new user to db"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        500:
          description: "system error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        400:
          description: "validation error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body

    get:
      summary: get all users
      tags:
        - user
      operationId: getUsers
      responses:
        200:
          description: operation sucessfull
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /user/{name}:
    delete:
      tags:
        - user
      description: delete user by name
      operationId: deleteUserByName
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        200:
          description: delete sucussfully
  /login:
    post:
      tags:
        - user
      summary: login
      operationId: loginUser
      requestBody:
        required: true
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        500:
          description: system error
          content:
            applicatio/json:
              schema:
                $ref: '#/components/schemas/Error'
  /category:
    get:
      tags:
        - items
      summary: get all categories
      operationId: getCategory
      responses:
        200:
          description: get all category objects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryResponse'
    post:
      tags:
        - items
      operationId: addCategory
      summary: add new category
      requestBody:
        required: true
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SerialObject'
      responses:
        200:
          description: operation done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerialObject'

  /category/{code}:
    patch:
      tags:
        - items
      summary: category by code
      description: update category by code
      operationId: patchCategory
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SerialObject'
      responses:
        200:
          description: update sub type by prev code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerialObject'

  /type:
    get:
      tags:
        - items
      summary: get items type
      operationId: getTypes
      responses:
        200:
          description: get all items types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryResponse'
    post:
      tags:
        - items
      operationId: addType
      summary: add new type
      requestBody:
        required: true
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SerialObject'
      responses:
        200:
          description: operation done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerialObject'

  /type/{code}:
    patch:
      tags:
        - items
      summary: update type by code
      description: update type by code
      operationId: patchType
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SerialObject'
      responses:
        200:
          description: update sub type by prev code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerialObject'

  /item/{type_code}:
    get:
      tags:
        - items
      summary: get items by type code
      operationId: getItemByCode
      parameters:
        - name: type_code
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: get all items that belongs to type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryResponse'
    patch:
      tags:
        - items
      summary: update sub type by code
      description: update sub type by code
      operationId: patchSubType
      parameters:
        - name: type_code
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SerialObject'
      responses:
        200:
          description: update sub type by prev code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerialObject'
    post:
      tags:
        - items
      operationId: addSubType
      summary: add new subType
      parameters:
        - name: type_code
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SerialObject'
      responses:
        200:
          description: operation done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerialObject'
  /order:
    post:
      tags:
        - items
      summary: post order object to db
      operationId: postOrder
      requestBody:
        required: true
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/OrderObject'
      responses:
        200:
          description: return same object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderObject'

    patch:
      tags:
        - items
      summary: update order object to db
      operationId: patchOrder
      requestBody:
        required: true
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateOrderRequest'
      responses:
        200:
          description: return same object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'

    get:
      tags:
        - items
      summary: get orders
      operationId: getOrders
      parameters:
        - name: cat
          in: query
          required: false
          schema:
            type: integer
        - name: type
          in: query
          required: false
          schema:
            type: integer
        - name: item
          in: query
          required: false
          schema:
            type: integer

      responses:
        200:
          description: get list of order objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderResponse'

  /order/{id}:
    delete:
      tags:
        - items
      summary: delete order
      operationId: deleteOrder
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: delete sucessfully
          content:
            application/json:
              schema:
                type: integer

  /search:
    get:
      tags:
        - items
      summary: search order
      operationId: searchOrder
      parameters:
        - name: keyword
          in: query
          required: true
          schema:
            type: string
        - name: cat
          in: query
          required: false
          schema:
            type: integer
        - name: type
          in: query
          required: false
          schema:
            type: integer
        - name: item
          in: query
          required: false
          schema:
            type: integer

      responses:
        200:
          description: search sucessfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderResponse'

  /order/csv:
    get:
      tags:
        - items
      summary: get orders csv
      operationId: getOrdersCsv
      parameters:
        - name: cat
          in: query
          required: false
          schema:
            type: integer
        - name: type
          in: query
          required: false
          schema:
            type: integer
        - name: item
          in: query
          required: false
          schema:
            type: integer

      responses:
        200:
          description: get list of order objects
          content:
            text/csv:
              schema:
                type: string
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          required:
            - 'false'
        username:
          type: string
          required:
            - 'true'
        password:
          type: string
          required:
            - 'true'
    Error:
      type: object
      properties:
        msg:
          type: string
    LoginResponse:
      type: object
      properties:
        id:
          type: integer
          required:
            - 'false'
        status:
          type: boolean
        name:
          type: string
    CategoryResponse:
      type: array
      items:
        $ref: '#/components/schemas/SerialObject'
    SerialObject:
      type: object
      properties:
        code:
          type: integer
        description:
          type: string

    OrderObject:
      type: object
      properties:
        item_code:
          type: integer
        category_code:
          type: integer
        name:
          type: string
        role:
          type: string
        phone:
          type: string
        sec_phone:
          type: string
        company:
          type: string
        company_cat:
          type: string
        email:
          type: string
        adress:
          type: string
          required:
            - 'false'
        notes:
          type: string
          required:
            - 'false'

    UpdateOrderRequest:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        role:
          type: string
        phone:
          type: string
        adress:
          type: string
        notes:
          type: string
      required:
        - id
        - name
        - role
        - phone

    OrderResponse:
      type: object
      properties:
        id:
          type: integer
        serial:
          type: string
        name:
          type: string
        role:
          type: string
        phone:
          type: string
        notes:
          type: string
          required:
            - 'false'
        type:
          type: string
        sec_phone:
          type: string
        company:
          type: string
        company_cat:
          type: string
        email:
          type: string
        item:
          type: string
        subItem:
          type: string
        category:
          type: string