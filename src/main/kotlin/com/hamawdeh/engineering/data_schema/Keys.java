/*
 * This file is generated by jOOQ.
 */
package com.hamawdeh.engineering.data_schema;


import com.hamawdeh.engineering.data_schema.tables.Category;
import com.hamawdeh.engineering.data_schema.tables.EngOrder;
import com.hamawdeh.engineering.data_schema.tables.EngUser;
import com.hamawdeh.engineering.data_schema.tables.Item;
import com.hamawdeh.engineering.data_schema.tables.OrderType;
import com.hamawdeh.engineering.data_schema.tables.records.CategoryRecord;
import com.hamawdeh.engineering.data_schema.tables.records.EngOrderRecord;
import com.hamawdeh.engineering.data_schema.tables.records.EngUserRecord;
import com.hamawdeh.engineering.data_schema.tables.records.ItemRecord;
import com.hamawdeh.engineering.data_schema.tables.records.OrderTypeRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CategoryRecord> CATEGORY_CODE_KEY = Internal.createUniqueKey(Category.CATEGORY, DSL.name("category_code_key"), new TableField[] { Category.CATEGORY.CODE }, true);
    public static final UniqueKey<CategoryRecord> CATEGORY_PKEY = Internal.createUniqueKey(Category.CATEGORY, DSL.name("category_pkey"), new TableField[] { Category.CATEGORY.ID }, true);
    public static final UniqueKey<EngOrderRecord> ENG_ORDER_PKEY = Internal.createUniqueKey(EngOrder.ENG_ORDER, DSL.name("eng_order_pkey"), new TableField[] { EngOrder.ENG_ORDER.ID }, true);
    public static final UniqueKey<EngUserRecord> ENG_USER_PKEY = Internal.createUniqueKey(EngUser.ENG_USER, DSL.name("eng_user_pkey"), new TableField[] { EngUser.ENG_USER.ID }, true);
    public static final UniqueKey<EngUserRecord> ENG_USER_USER_NAME_KEY = Internal.createUniqueKey(EngUser.ENG_USER, DSL.name("eng_user_user_name_key"), new TableField[] { EngUser.ENG_USER.USER_NAME }, true);
    public static final UniqueKey<ItemRecord> ITEM_CODE_KEY = Internal.createUniqueKey(Item.ITEM, DSL.name("item_code_key"), new TableField[] { Item.ITEM.CODE }, true);
    public static final UniqueKey<ItemRecord> ITEM_PKEY = Internal.createUniqueKey(Item.ITEM, DSL.name("item_pkey"), new TableField[] { Item.ITEM.ID }, true);
    public static final UniqueKey<OrderTypeRecord> ORDER_TYPE_CODE_KEY = Internal.createUniqueKey(OrderType.ORDER_TYPE, DSL.name("order_type_code_key"), new TableField[] { OrderType.ORDER_TYPE.CODE }, true);
    public static final UniqueKey<OrderTypeRecord> ORDER_TYPE_PKEY = Internal.createUniqueKey(OrderType.ORDER_TYPE, DSL.name("order_type_pkey"), new TableField[] { OrderType.ORDER_TYPE.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<EngOrderRecord, CategoryRecord> ENG_ORDER__FK_CATEGORY_CODE = Internal.createForeignKey(EngOrder.ENG_ORDER, DSL.name("fk_category_code"), new TableField[] { EngOrder.ENG_ORDER.CATEGORY_CODE }, Keys.CATEGORY_CODE_KEY, new TableField[] { Category.CATEGORY.CODE }, true);
    public static final ForeignKey<EngOrderRecord, ItemRecord> ENG_ORDER__FK_ITEM_CODE = Internal.createForeignKey(EngOrder.ENG_ORDER, DSL.name("fk_item_code"), new TableField[] { EngOrder.ENG_ORDER.ITEM_CODE }, Keys.ITEM_CODE_KEY, new TableField[] { Item.ITEM.CODE }, true);
    public static final ForeignKey<ItemRecord, OrderTypeRecord> ITEM__FK_TYPE_CODE = Internal.createForeignKey(Item.ITEM, DSL.name("fk_type_code"), new TableField[] { Item.ITEM.TYPE_CODE }, Keys.ORDER_TYPE_CODE_KEY, new TableField[] { OrderType.ORDER_TYPE.CODE }, true);
}
