/*
 * This file is generated by jOOQ.
 */
package com.hamawdeh.engineering.data_schema.tables.records;


import com.hamawdeh.engineering.data_schema.tables.OrderType;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderTypeRecord extends UpdatableRecordImpl<OrderTypeRecord> implements Record4<Integer, Integer, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.order_type.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.order_type.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.order_type.code</code>.
     */
    public void setCode(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.order_type.code</code>.
     */
    public Integer getCode() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.order_type.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.order_type.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.order_type.created</code>.
     */
    public void setCreated(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.order_type.created</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, String, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, String, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return OrderType.ORDER_TYPE.ID;
    }

    @Override
    public Field<Integer> field2() {
        return OrderType.ORDER_TYPE.CODE;
    }

    @Override
    public Field<String> field3() {
        return OrderType.ORDER_TYPE.DESCRIPTION;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return OrderType.ORDER_TYPE.CREATED;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getCode();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public LocalDateTime component4() {
        return getCreated();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getCode();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public LocalDateTime value4() {
        return getCreated();
    }

    @Override
    public OrderTypeRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public OrderTypeRecord value2(Integer value) {
        setCode(value);
        return this;
    }

    @Override
    public OrderTypeRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public OrderTypeRecord value4(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public OrderTypeRecord values(Integer value1, Integer value2, String value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrderTypeRecord
     */
    public OrderTypeRecord() {
        super(OrderType.ORDER_TYPE);
    }

    /**
     * Create a detached, initialised OrderTypeRecord
     */
    public OrderTypeRecord(Integer id, Integer code, String description, LocalDateTime created) {
        super(OrderType.ORDER_TYPE);

        setId(id);
        setCode(code);
        setDescription(description);
        setCreated(created);
    }
}
